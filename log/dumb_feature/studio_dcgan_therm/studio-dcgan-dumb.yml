dir: &dir log/dumb_feature
n_steps: &n_steps 250
every: &every 25
seed:
device: &device cuda
total_n: &total_n 10000
batch_size: &batch_size 500
weight_step: &weight_step 0.0
step_size: &step_size 0.001
name: &name studio_dcgan_dumb
burn_in_steps: 0
sub_dir: &sub_dir studio_dcgan
gan_config:
  train_transform:
    Normalize:
      mean: &mean [0.5, 0.5, 0.5]
      std: &std [0.5, 0.5, 0.5]
  prior: normal
  eval: false
  generator:
    name: StudioGen
    params:
      mean: *mean
      std: *std
      config: DCGAN.yaml
    ckpt_path: checkpoints/dcgan/G_CIFAR_studio_best.pth
  discriminator:
    name: StudioDis
    params:
      mean: *mean
      std: *std
      output_layer: sigmoid
      config: DCGAN.yaml
    ckpt_path: checkpoints/dcgan/D_CIFAR_studio_best.pth
  thermalize:
    true:
      log_norm_const: -46.628958877173496
      lipschitz_const: 51.11622607421875
    false:
      log_norm_const: 1.4911995782903529
      lipschitz_const: 12.953924438476562
eval:
  true:
    log_norm_const: 8.86578310470789
    lipschitz_const: 12.961089355468749
  false:
    log_norm_const: 15.349884819234164
    lipschitz_const: 44.623684082031225
sample_params: &sample_params
  sample: true
  save_dir: *dir
  sub_dir: *sub_dir
  feature:
    name: DumbFeature
    params:
      device: *device
      dis:
  total_n: *total_n
  batch_size: *batch_size
  save_every: *every
  params:
    n_steps: *n_steps
    save_every: *every
    burn_in_steps: 0
    n_sampling_steps: &n_sampling_steps 1
    weight_step: *weight_step
    step_size: *step_size
afterall_params:
  results_dir: *dir
  sub_dir: *sub_dir
  init_wandb: true
  compute_fid: true
  compute_is: true
params: &params
  sample_params: *sample_params
  name: *name
  feature:
    name: dumb
wandb_init_params: &wandb_init_params
  project: &wandb_project soul_gan
  entity: &wandb_account sverdoot
  name: *name
  config: *params
logging:
  wandb:
callbacks:
  feature_callbacks: {}
  afterall_callbacks:
    energy:
      name: EnergyCallback
      params:
        dis:
        gen:
        invoke_every: 1
        device: *device
        update_input: true
        batch_size: *batch_size
    discriminator:
      name: DiscriminatorCallback
      params:
        dis:
        invoke_every: 1
        device: *device
        update_input: true
        batch_size: *batch_size
    wandb:
      name: WandbCallback
      params:
        init_params:
          <<: *wandb_init_params
          reinit: false
        invoke_every: 1
        keys:
        - Energy
        - D(G(z))
    wandb_imgs:
      name: WandbCallback
      params:
        init_params:
          <<: *wandb_init_params
          reinit: false
        invoke_every: 1
        keys:
        - imgs
